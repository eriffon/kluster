# PynSource Version 1.2
{'type':'meta', 'info1':'Lorem ipsum dolor sit amet, consectetur adipiscing elit is latin. Comments are saved.'}
{'type':'umlshape', 'id':'fqpr_generation.Fqpr', 'x':1665, 'y':419, 'width':418, 'height':682, 'attrs': 'client (dask.Client)|export (FqprExport)|filter (FilterManager)|horizontal_crs (pyproj.CRS)|multibeam (BatchRead)|plot (FqprVisualizations)|subset (FqprSubset)|vert_ref', 'meths': 'calculate_total_uncertainty (processing - step 5/5)|close|construct_crs|georef_xyz (processing - step 4/5)|get_beam_pointing_vectors (processing - step 2/5)|get_orientation_vectors (processing - step 1/5)|has_sbet|import_post_processed_navigation|import_sound_velocity_files|input_datum|last_operation_date|line_attributes|line_is_processed|max_time|min_time|multibeam_extension|number_of_heads|number_of_pings|overwrite_raw_navigation|process_backscatter|remove_post_processed_navigation|remove_profile|return_navigation|return_next_unprocessed_line|run_filter|sbet_navigation|set_vertical_reference|sonar_model|status|sv_correct (processing - step 3/5)|total_distance_meters'}
{'type':'umlshape', 'id':'xarray_conversion.BatchRead', 'x':1196, 'y':512, 'width':410, 'height':346, 'attrs': 'client (dask.Client)|dest|filfolder|raw_ping (list of xarray Datasets for sonar heads)|raw_att (xarray Dataset for sonar attitude)', 'meths': 'chunk_size|get_nearest_runtime_parameters|get_nearest_install_parameters|is_dual_head|read (conversion)|reload_pingrecords|reload_attituderecords|return_all_profiles|return_nearest_soundspeed_profile|return_raw_navigation|return_tpu_parameters|return_utm_zone_number|return_waterline'}
{'type':'umlshape', 'id':'backends._zarr.ZarrBackend', 'x':1456, 'y':161, 'width':270, 'height':106, 'attrs': 'client (dask.Client)', 'meths': 'write|write_attributes'}
{'type':'umlshape', 'id':'fqpr_intelligence.FqprIntel', 'x':109, 'y':689, 'width':318, 'height':522, 'attrs': 'general_settings|has_actions|monitors|multibeam_intel (MultibeamModule)|nav_intel (NavigationModule)|naverror_intel (NavErrorModule)|navlog_intel (NavExportLogModule)|processing_settings|project (FqprProject)|svp_intel (SvpModule)', 'meths': 'add_file|bind_to_action_update|clear|execute_action|match_multibeam_files_to_project|match_navigation_files|match_navigation_files_to_project|match_svp_files_to_project|regenerate_actions|remove_file|return_intel_modules|set_auto_processing_mode|set_designated_surface|set_settings|start_folder_monitor|stop_folder_monitor|update_from_project|update_intel_for_action_results|update_matches'}
{'type':'umlshape', 'id':'fqpr_project.FqprProject', 'x':661, 'y':722, 'width':386, 'height':554, 'attrs': 'client (dask.Client)|fqpr_attrs|fqpr_instances (dict of Fqpr instances)|fqpr_lines|settings|surface_instances (dict of BathyGrid instances)|vessel_file', 'meths': 'absolute_path_from_relative|add_fqpr|add_surface|add_vessel_file|close|get_dask_client|get_fqpr_by_serial_number|get_fqprs_by_paths|new_project_from_directory|open_project|path_relative_to_project|remove_fqpr|remove_surface|retrieve_data_for_time_segments|return_line_navigation|return_line_owner|return_fqpr_paths|return_lines_in_box|return_project_lines|return_soundings_in_polygon|return_surface_paths|save_project|set_settings|update_surface'}
{'type':'umlshape', 'id':'modules.subset.FqprSubset', 'x':2349, 'y':129, 'width':260, 'height':266, 'attrs': 'is_subset', 'meths': 'get_variable_by_filter|redo_subset|restore_subset|return_soundings_in_polygon|set_filter_by_polygon|set_variable_by_filter|subset_by_lines|subset_by_time|subset_by_time_and_beam|subset_by_times|subset_variables|subset_variables_by_line'}
{'type':'umlshape', 'id':'modules.subset.FqprExport', 'x':2352, 'y':485, 'width':260, 'height':144, 'attrs': '', 'meths': 'export_dataset_to_csv|export_lines_to_file|export_pings_to_file|export_soundings_to_file|export_tracklines_to_file|export_variable_to_csv'}
{'type':'umlshape', 'id':'modules.filter.FilterManager', 'x':2338, 'y':721, 'width':290, 'height':218, 'attrs': 'base_filter_directory|external_filter_directory|filter_descriptions|filter_file|filter_lookup|filter_names', 'meths': 'clear_filters|list_filters|return_filter_class|run_filter'}
{'type':'umlshape', 'id':'modules.visualizations.FqprVisualizations', 'x':2271, 'y':1054, 'width':420, 'height':208, 'attrs': '', 'meths': 'plot_backscatter_sample|plot_sound_velocity_map|plot_sound_velocity_profiles|plot_surface_sv_vs_profiles|plot_thu_sample|plot_tvu_sample|soundings_plot_2d|soundings_plot_3d|visualize_orientation_vector|visualize_beam_pointing_vectors'}
{'type':'comment', 'id':'C2691', 'x':1251, 'y':431, 'width':294, 'height':78, 'comment': 'QmF0Y2hSZWFkIC0gaGFuZGxlcyBtdWx0aWJlYW0gCmNvbnZlcnNpb24sIGFuZCBleHBvc2VzIHRoZSBkYXRhIAp0aHJvdWdoIHRoZSBtdWx0aWJlYW0gYXR0cmlidXRlIAppbiBGcXByLg=='}
{'type':'comment', 'id':'C2448', 'x':1698, 'y':343, 'width':360, 'height':72, 'comment': 'RnFwciAtIEZ1bGx5IFF1YWxpZmllZCBQaW5nIFJlY29yZApJcyB0aGUgZGF0YSBjb250YWluZXIsIHdpbGwgY29udGFpbiBkYXRhCmZvciBhIGRheS9zb25hciBhbmQgYWxsIG90aGVyIGltcG9ydGVkIGRhdGEuCihpLmUuIEVNMjA0MF8xMjNfMDdfMTlfMjAxMCk='}
{'type':'umlshape', 'id':'fqpr_intelligence.IntelModule', 'x':456, 'y':9, 'width':300, 'height':266, 'attrs': 'created_time_utc|file_name|file_path|file_paths|file_size_kb|last_modified_time_utc|time_added|type|unique_id|unmatched_files', 'meths': 'add_dict|clear|remove_file'}
{'type':'umlshape', 'id':'fqpr_intelligence.MultibeamModule', 'x':49, 'y':32, 'width':340, 'height':160, 'attrs': 'data_end_time_utc|data_start_time_utc|line_groups|matching_fqpr|primary_serial_number|secondary_serial_number|sonar_model_number', 'meths': ''}
{'type':'umlshape', 'id':'fqpr_intelligence.NavigationModule', 'x':63, 'y':221, 'width':350, 'height':112, 'attrs': 'matching_fqpr|nav_groups|weekly_seconds_end|weekly_seconds_start', 'meths': ''}
{'type':'umlshape', 'id':'fqpr_intelligence.NavErrorModule', 'x':900, 'y':31, 'width':330, 'height':112, 'attrs': 'matching_sbet|sbet_lookup|weekly_seconds_end|weekly_seconds_start', 'meths': ''}
{'type':'umlshape', 'id':'fqpr_intelligence.NavExportLogModule', 'x':446, 'y':314, 'width':370, 'height':176, 'attrs': 'datum|ellipsoid|exported_sbet_file|input_sbet_file|matching_sbet|mission_date|sample_rate_hertz|sbet_lookup', 'meths': ''}
{'type':'umlshape', 'id':'fqpr_intelligence.SvpModule', 'x':874, 'y':169, 'width':280, 'height':240, 'attrs': 'julian_day|latitude|longitude|number_of_layers|number_of_profiles|profiles|source_epsg|svp_groups|time_utc|time_utc_seconds|utm_hemisphere|utm_zone', 'meths': ''}
{'type':'comment', 'id':'C5879', 'x':107, 'y':609, 'width':321, 'height':78, 'comment': 'RnFwckludGVsIC0gbWFuYWdlcyB0aGUgY3JlYXRpb24gb2YgCm5ldyBkYXRhIGJ5IG1hdGNoaW5nIGFkZGVkIGRhdGEKdG8gZXhpc3RpbmcgZGF0YSBhbmQgZ2VuZXJhdGluZyBhY3Rpb25zCnRocm91Z2ggb25lIG9mIHRoZSBpbnRlbCBtb2R1bGVzLg=='}
{'type':'comment', 'id':'C4191', 'x':678, 'y':672, 'width':354, 'height':48, 'comment': 'RnFwclByb2plY3QgLSBjb250YWlucyB0aGUgYWRkZWQgZmlsZXMgYW5kCnN1cmZhY2VzIGZvciB1c2UgYnkgdGhlIEZxcHJJbnRlbCBjbGFzcy4='}
{'type':'comment', 'id':'C3995', 'x':15, 'y':1977, 'width':380, 'height':26, 'comment': 'TWFkZSBpbiBQeW5zb3VyY2UgLSBFcmljIFlvdW5raW4gLSAxMC8yMC8yMDIy'}
{'type':'umlshape', 'id':'fqpr_convenience', 'x':66, 'y':1557, 'width':786, 'height':240, 'attrs': '', 'meths': 'convert_multibeam - Build a new Fqpr from input files|generate_new_mosaic - build new BathyGrid surface instance from Fqpr soundings (x-y-reflectivity)|generate_new_surface - build new BathyGrid surface instance from Fqpr soundings (x-y-z)|import_processed_navigation - load SBET into existing Fqpr|import_sound_velocity - import new SVP profiles into existing Fqpr|overwrite_raw_navigation - overwrite Fqpr navigation with POS files|perform_all_processing - combine convert_multibeam and process multibeam|points_to_surface - create new BathyGrid instance from generic point cloud data|process_multibeam - Take converted data and run processing routines|reload_data - reload Fqpr from disk|reload_surface - reload BathyGrid from disk|update_surface - add/remove Fqpr data from an existing BathyGrid instance'}
{'type':'umlshape', 'id':'fqpr_intelligence', 'x':67, 'y':1847, 'width':785, 'height':80, 'attrs': '', 'meths': 'intel_process - organize, containerize, convert, process multibeam data automatically|intel_process_service - monitor a directory and run intel_process on incoming data as it arrives'}
{'type':'comment', 'id':'C609', 'x':12, 'y':1374, 'width':2992, 'height':1, 'comment': ''}
{'type':'comment', 'id':'C874', 'x':65, 'y':1426, 'width':789, 'height':81, 'comment': 'UHJvY2Vzc2luZyByb3V0aW5lcyBhcmUgc3RvcmVkIGluIGZxcHJfaW50ZWxsaWdlbmNlIGFuZCBmcXByX2NvbnZlbmllbmNlLiAgWW91IHNob3VsZCBnZW5lcmFsbHkgCnVzZSBpbnRlbF9wcm9jZXNzIHRvIHByb2Nlc3MgZGF0YS4gIFVzaW5nIGNvbnZlcnRfbXVsdGliZWFtLCBwcm9jZXNzX211bHRpYmVhbSBhbmQgCnBlcmZvcm1fYWxsX3Byb2Nlc3NpbmcgcmVxdWlyZXMgeW91IHRvIGVuc3VyZSBmaWxlcyBhcmUgZ3JvdXBlZCBhbmQgc2VudCB0byB0aGUgY29ycmVjdCBmb2xkZXJzIAp5b3Vyc2VsZi4='}
{'type':'umlshape', 'id':'intel_process', 'x':1495, 'y':1683, 'width':140, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'multibeam, svp, sbet, etc. files', 'x':981, 'y':1541, 'width':330, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'coordinate system', 'x':1024, 'y':1740, 'width':180, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'destination', 'x':1052, 'y':1705, 'width':120, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'vertical reference', 'x':1019, 'y':1773, 'width':190, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'(optional) designated surface for updating', 'x':918, 'y':1572, 'width':430, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'FqprIntel - Intelligence module that contains the project and references to the processed data', 'x':1770, 'y':1671, 'width':950, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'list of Fqpr instances created by the process', 'x':1770, 'y':1713, 'width':98, 'height':170, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'processing mode', 'x':1030, 'y':1837, 'width':160, 'height':28, 'attrs': '', 'meths': ''}
{'type':'umlshape', 'id':'cast selection method', 'x':1004, 'y':1805, 'width':220, 'height':28, 'attrs': '', 'meths': ''}
{'type':'comment', 'id':'C6719', 'x':2319, 'y':47, 'width':326, 'height':81, 'comment': 'U3Vic2V0IG1vZHVsZSBhbGxvd3MgeW91IHRvIHRyaW0KdGhlIEZxcHIgY2xhc3MgdG8gYSBzcGVjaWZpYyB0aW1lLCBiZWFtCm9yIGdlb2dyYXBoaWMgcmFuZ2UgYW5kIHRoZW4gcmVzdG9yZQp0byB0aGUgb3JpZ2luYWwgZGF0YXNldHMgYWZ0ZXJ3YXJkcy4='}
{'type':'comment', 'id':'C3377', 'x':63, 'y':379, 'width':361, 'height':100, 'comment': 'VGhlIEludGVsTW9kdWxlcyBzdG9yZSB0aGUgbWV0YWRhdGEgZm9yIHRoZSAKZmlsZXMgYWRkZWQgdG8gdGhlIEZxcHJJbnRlbCBjbGFzcyBhbmQgYXJlIAp1c2VkIHRvIGdlbmVyYXRlIG5ldyBwcm9jZXNzaW5nIGFjdGlvbnMgYXMgCmRhdGEgaXMgYWRkZWQgYW5kIHJlbW92ZWQu'}
{'type':'comment', 'id':'C2100', 'x':2314, 'y':440, 'width':331, 'height':43, 'comment': 'RXhwb3J0IG1vZHVsZSBhbGxvd3MgdGhlIEZxcHIgZGF0YXNldHMKdG8gYmUgZXhwb3J0ZWQgdG8gYSB2YXJpZXR5IG9mIGZvcm1hdHMu'}
{'type':'comment', 'id':'C6696', 'x':2316, 'y':674, 'width':331, 'height':46, 'comment': 'RmlsdGVyIG1vZHVsZSBhbGxvd3MgZm9yIHBsdWdpbiB0eXBlCmZpbHRlcnMgdG8gYmUgcnVuIG9uIHRoZSBGcXByIGRhdGFzZXRzLg=='}
{'type':'comment', 'id':'C9189', 'x':2305, 'y':993, 'width':341, 'height':59, 'comment': 'VmlzdWFsaXphdGlvbnMgaW5jbHVkZXMgc29tZSBiYXNpYyBwbG90cwphbmQgYW5pbWF0aW9ucyB0aGF0IGNhbiBiZSBtYWRlIGZyb20KdGhlIEZxcHIgb2JqZWN0Lg=='}
{'type':'comment', 'id':'C1710', 'x':1451, 'y':89, 'width':281, 'height':62, 'comment': 'WmFyciBpcyB1c2VkIGZvciBhbGwgZGF0YXN0b3JhZ2UsIApjbGFzc2VzIHRoYXQgd3JpdGUgdG8gZGlzayAKaW5oZXJpdCBmcm9tIHRoaXMgYmFja2VuZC4='}
{'type':'edge', 'id':'xarray_conversion.BatchRead_to_backends._zarr.ZarrBackend', 'source':'xarray_conversion.BatchRead', 'target':'backends._zarr.ZarrBackend', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_generation.Fqpr_to_backends._zarr.ZarrBackend', 'source':'fqpr_generation.Fqpr', 'target':'backends._zarr.ZarrBackend', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_generation.Fqpr_to_xarray_conversion.BatchRead', 'source':'fqpr_generation.Fqpr', 'target':'xarray_conversion.BatchRead', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_generation.Fqpr_to_modules.subset.FqprSubset', 'source':'fqpr_generation.Fqpr', 'target':'modules.subset.FqprSubset', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_generation.Fqpr_to_modules.subset.FqprExport', 'source':'fqpr_generation.Fqpr', 'target':'modules.subset.FqprExport', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_generation.Fqpr_to_modules.filter.FilterManager', 'source':'fqpr_generation.Fqpr', 'target':'modules.filter.FilterManager', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_generation.Fqpr_to_modules.visualizations.FqprVisualizations', 'source':'fqpr_generation.Fqpr', 'target':'modules.visualizations.FqprVisualizations', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.FqprIntel_to_fqpr_intelligence.MultibeamModule', 'source':'fqpr_intelligence.FqprIntel', 'target':'fqpr_intelligence.MultibeamModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.FqprIntel_to_fqpr_intelligence.NavigationModule', 'source':'fqpr_intelligence.FqprIntel', 'target':'fqpr_intelligence.NavigationModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.FqprIntel_to_fqpr_intelligence.NavErrorModule', 'source':'fqpr_intelligence.FqprIntel', 'target':'fqpr_intelligence.NavErrorModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.FqprIntel_to_fqpr_intelligence.NavExportLogModule', 'source':'fqpr_intelligence.FqprIntel', 'target':'fqpr_intelligence.NavExportLogModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.FqprIntel_to_fqpr_intelligence.SvpModule', 'source':'fqpr_intelligence.FqprIntel', 'target':'fqpr_intelligence.SvpModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.MultibeamModule_to_fqpr_intelligence.IntelModule', 'source':'fqpr_intelligence.MultibeamModule', 'target':'fqpr_intelligence.IntelModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.NavigationModule_to_fqpr_intelligence.IntelModule', 'source':'fqpr_intelligence.NavigationModule', 'target':'fqpr_intelligence.IntelModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.NavErrorModule_to_fqpr_intelligence.IntelModule', 'source':'fqpr_intelligence.NavErrorModule', 'target':'fqpr_intelligence.IntelModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.NavExportLogModule_to_fqpr_intelligence.IntelModule', 'source':'fqpr_intelligence.NavExportLogModule', 'target':'fqpr_intelligence.IntelModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_intelligence.SvpModule_to_fqpr_intelligence.IntelModule', 'source':'fqpr_intelligence.SvpModule', 'target':'fqpr_intelligence.IntelModule', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_project.FqprProject_to_fqpr_intelligence.FqprIntel', 'source':'fqpr_project.FqprProject', 'target':'fqpr_intelligence.FqprIntel', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'fqpr_generation.Fqpr_to_fqpr_project.FqprProject', 'source':'fqpr_generation.Fqpr', 'target':'fqpr_project.FqprProject', 'uml_edge_type': 'association'}
{'type':'edge', 'id':'multibeam, svp, sbet, etc. files_to_intel_process', 'source':'multibeam, svp, sbet, etc. files', 'target':'intel_process', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'destination_to_intel_process', 'source':'destination', 'target':'intel_process', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'coordinate system_to_intel_process', 'source':'coordinate system', 'target':'intel_process', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'vertical reference_to_intel_process', 'source':'vertical reference', 'target':'intel_process', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'(optional) designated surface for updating_to_intel_process', 'source':'(optional) designated surface for updating', 'target':'intel_process', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'intel_process_to_FqprIntel - Intelligence module that contains the project and references to the processed data', 'source':'intel_process', 'target':'FqprIntel - Intelligence module that contains the project and references to the processed data', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'intel_process_to_list of Fqpr instances created by the process', 'source':'intel_process', 'target':'list of Fqpr instances created by the process', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'cast selection method_to_intel_process', 'source':'cast selection method', 'target':'intel_process', 'uml_edge_type': 'composition'}
{'type':'edge', 'id':'processing mode_to_intel_process', 'source':'processing mode', 'target':'intel_process', 'uml_edge_type': 'composition'}
